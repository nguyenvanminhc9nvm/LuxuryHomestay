apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.minhnv.luxuryhomestay"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /* Dagger2 - We are going to use dagger.android which includes
    * support for Activity and fragment injection so we need to include
    * the following dependencies */
    implementation 'com.google.dagger:dagger-android:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.17'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.17'

    /* Dagger2 - default dependency */
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'

    implementation 'com.amitshekhar.android:rx2-android-networking:1.0.1'

    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    //gson
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'


    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0'

    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'com.wang.avi:library:2.1.3'

    implementation 'com.borjabravo:readmoretextview:2.1.0'

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.18'
    implementation 'de.hdodenhof:circleimageview:3.0.1'

    // Retrofit
    def retrofitVersion = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version"
    // Retrofit call adapter
    implementation 'com.r0adkll:slidableactivity:2.1.0'
    //timeber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //loader view
    implementation 'com.elyeproj.libraries:loaderviewlibrary:2.0.0'
    //snap helper
    implementation 'com.github.rubensousa:gravitysnaphelper:2.2.0'
    //room dataBase
    def room_version = "2.2.1"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    //room rxJava
    // RxJava support for Room
    implementation 'androidx.room:room-rxjava2:2.2.1'
    // Testing support
    androidTestImplementation "android.arch.core:core-testing:1.1.1"

    implementation 'de.hdodenhof:circleimageview:3.0.1'



}
